Ref: 
1. https://medium.com/@phindulo60/portfolio-optimization-with-python-mean-variance-optimization-mvo-and-markowitzs-efficient-64acb3b61ef6
2. https://github.com/PaiViji/PythonFinance-PortfolioOptimization/blob/master/Lesson7_ConstrainedPortfolioOptimization/Lesson7_MainContent.ipynb

Target : 

- Define the similar stock behaviors based on the daily '% change' (rate of change)
(based on clustering method) -> form a portfolio 
Ex:
Cluster 1
['OCB']
Cluster 2 
['BMI' 'POW' 'SBT']
Cluster 3
['KHP'] 
--> 1st portfolio - ['OCB','POW','KHP'] -> 2nd port - ['OCB','SBT','KHP']
- Define a method to determine how many we should distribute to each STOCKS (Mean-Variance Optimization)
- Define the cut loss -- margin by Efficient Frontier 
- Having lots of portfolio (clustering) with (can have the suitable weights)--> Using Sharpe Ratio To choose which ones are best.

- Wanna strictful rule for high and low volativity --> Add weights of low and high volativity --> Do the optimization (the same as procedure as Mean-Variance Optimization)

Input : 
- Historical Data (OCB - KHP - BMI) <- time-of-interest ('OCB') up to 24/11/2023
- The total Capital (current amout in STOCK account)
Output :
File : Main.ipny
- Weight of each stocks, which means the percentage should we invest for best revenue
--> Mean_Variance_Optimization: (Optimal Weights)
(trade off between expected return and risk)
BMI: 0.26
OCB: 0.28
KHP: 0.45
--> Efficient Frontier Optimization :
(identify portfolios that provide the highest return for a given level of risk.)
 show in DataFrame - 
[OCB,KHP,BMI] - [0.0, 0.69, 0.31] of your budgets
- Return 20.11% - Risk 2.24



Optimizing function

Output : 
- Optimized weights for quadratic function
- The number of stock you should have 

Notice: 
- This method --> not really concerning the trading volumne

- Automatical Generation:
--> Input data in folder data
+ Data Wrangling - python Data_wrangling.py --> see results in data
+ Clustering - in python Data_wrangling.py
+ Mean - Variance Optimization
+ Efficient Frontier
+ Sharpe ratio

--> Read the command in terminal - or read in .txt file ???

Runing procedure
- Dowload all historical stock data in investing.com
- Save in folder 'data'
- Run "data_wrangling.py"
- Read the file "Cluster.txt" and form a porlolio (Done)
- Input the portfolio via terminal or choosen_portfolio.txt file (via portfolio.txt file)
- See the Efficient Frontier and choose based on expected return and annualized risk (done)
- See the weights of portfolio (in Results/optimal_weight.txt)

********
Section 1: Stock portfolio